WEBVTT

00:00.210 --> 00:01.950
Hi everybody and welcome back.

00:02.010 --> 00:04.880
Now we're going to continue on in the same vein as our last few lectures.

00:04.920 --> 00:09.720
And that is our programs of airline kind of check in not checked in features.

00:09.990 --> 00:15.220
So for many of our programs we won't know in advance how many arguments a function needs to accept but

00:15.270 --> 00:19.900
Python allows a function to collect an arbitrary number of arguments from the calling statement.

00:19.920 --> 00:24.810
So the function in the following program has one parameter but this parameter collects as many arguments

00:24.870 --> 00:26.380
as the calling line provides.

00:26.460 --> 00:31.950
Let's create our new function and let's take a step back from where we were with a previous programs

00:32.190 --> 00:35.680
and imagine ourselves online booking ourselves a flight.

00:35.880 --> 00:39.190
So create passenger and we're going to have requests.

00:39.820 --> 00:40.730
OK there we go.

00:40.890 --> 00:43.690
That parameter will collect all the user requests.

00:49.140 --> 00:52.870
Print user request in our description.

00:53.010 --> 00:58.140
There we go print requests.

00:58.240 --> 00:59.970
Now let's call our function.

01:00.010 --> 01:07.300
So create passenger now what request would a passenger when they're blocking a flight make IOC or let's

01:07.300 --> 01:07.970
say window seat.

01:07.990 --> 01:17.590
I like window seats window seat seat near the top of the plane seat new type of plane.

01:17.590 --> 01:18.650
There we go.

01:19.150 --> 01:23.430
I was on the other AM request that a user might make.

01:23.430 --> 01:28.350
Actually I was booking a flight the other day and you're allowed to request breakfast so you can preorder

01:28.350 --> 01:29.710
your breakfast on the plane.

01:30.000 --> 01:35.090
So preorder breakfast now.

01:35.100 --> 01:35.840
There we go.

01:36.100 --> 01:39.300
Let's print this out an error now.

01:39.390 --> 01:40.640
I've left that in by design.

01:40.710 --> 01:41.510
So we have an error.

01:41.520 --> 01:46.710
Unlike my previous errors I said at the start of this lecture we can create a function that will allow

01:46.710 --> 01:52.200
us to accept an arbitrary number of arguments so here we have an arbitrary number of arguments and a

01:52.200 --> 01:57.270
request and a print request but how do we actually accept the average number of arguments.

01:57.330 --> 01:59.570
We just need to make a small change here.

01:59.650 --> 02:07.230
We need to add an asterix to request the Actrix and the parameter tells to make an empty tuple called

02:07.480 --> 02:11.430
requests and put in it whatever values it receives.

02:11.430 --> 02:14.180
Now let's have a look at it again.

02:14.850 --> 02:15.570
There we go.

02:15.810 --> 02:20.520
So as you can see when creating this passenger they requested a window seat near the top of the plane

02:20.670 --> 02:22.570
and they've preordered breakfast.

02:22.680 --> 02:23.940
Very very nice.

02:23.970 --> 02:28.950
In our next lecture will replace the print statement with a loop and run through each of the passenger

02:28.950 --> 02:29.760
requests.

02:29.760 --> 02:31.740
Thanks for listening and I'll see you in the next lecture.
